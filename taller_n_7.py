# -*- coding: utf-8 -*-
"""Taller_n_7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QKO07CA7QIvbsu3bkerhfkTpJLEIX1Fe
"""

def to_twos_complement(n):
    """Convierte un número entero a binario de 16 bits en complemento a dos"""
    if n < 0:
        n = (1 << 16) + n  # Añadir 2^16
    return format(n, '016b')

def from_twos_complement(b):
    """Convierte un número binario de 16 bits en complemento a dos a decimal"""
    if b[0] == '1':  # Es negativo
        return int(b, 2) - (1 << 16)
    else:
        return int(b, 2)

def suma_binaria_16bits(a, b):
    """Suma binaria con complemento a dos de 16 bits"""
    resultado = (a + b) & 0xFFFF  # Mantener solo los 16 bits menos significativos
    return resultado

# Solicitar entrada del usuario
try:
    num1 = int(input("Ingrese el primer número (-32768 a 32767): "))
    num2 = int(input("Ingrese el segundo número (-32768 a 32767): "))

    if not (-32768 <= num1 <= 32767) or not (-32768 <= num2 <= 32767):
        print("Error: Los números deben estar entre -32768 y 32767.")
    else:
        # Convertir a complemento a dos
        bin1 = to_twos_complement(num1)
        bin2 = to_twos_complement(num2)

        # Sumar en binario
        suma = suma_binaria_16bits(num1, num2)
        bin_suma = format(suma, '016b')
        resultado_decimal = from_twos_complement(bin_suma)

        # Mostrar resultados
        print(f"\nNúmero 1: {num1} -> {bin1}")
        print(f"Número 2: {num2} -> {bin2}")
        print(f"Suma binaria: {bin_suma}")
        print(f"Resultado decimal: {resultado_decimal}")

except ValueError:
    print("Error: Por favor ingrese números enteros válidos.")