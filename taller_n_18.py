# -*- coding: utf-8 -*-
"""Taller_n_18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iLnheCwuniljERTbSZA725KeBirPSsGg
"""

import numpy as np
import matplotlib.pyplot as plt
# y = α * e^(βx)

x = np.array([1, 2, 3, 4, 5, 6], dtype=float)
y = np.array([2.8, 5.1, 6.9, 9.2, 12.9, 18.1], dtype=float)

ln_y = np.log(y)

n = len(x)
sum_x = np.sum(x)
sum_ln_y = np.sum(ln_y)
sum_x_ln_y = np.sum(x * ln_y)
sum_x2 = np.sum(x ** 2)

b = (n * sum_x_ln_y - sum_x * sum_ln_y) / (n * sum_x2 - sum_x ** 2)
a = np.mean(ln_y) - b * np.mean(x)

alpha = np.exp(a)
beta = b

y_pred = alpha * np.exp(beta * x)

Sr = np.sum((y - y_pred) ** 2)
St = np.sum((y - np.mean(y)) ** 2)
r2 = (St - Sr) / St
r = np.sqrt(r2)
Syx = np.sqrt(Sr / (n - 2))

print("==== RESULTADOS ====")
print(f"α (alpha) = {alpha:.5f}")
print(f"β (beta) = {beta:.5f}")
print(f"Error estándar (Sy/x) = {Syx:.5f}")
print(f"Coeficiente de determinación (r²) = {r2:.5f}")
print(f"Coeficiente de correlación (r) = {r:.5f}")

plt.figure(figsize=(8,5))
plt.scatter(x, y, color='blue', label='Datos experimentales')
plt.plot(x, y_pred, color='red', label='Modelo ajustado: y = α e^(βx)')
plt.title('Regresión Exponencial por Mínimos Cuadrados')
plt.xlabel('x')
plt.ylabel('y')
plt.legend()
plt.grid(True)
plt.show()