# -*- coding: utf-8 -*-
"""Taller_N_6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VqHeAVL387Yw7bV0WDTu0jqPZ6chJKvo
"""

x = float(input("Ingrese el valor en radianes: "))

cifras_significativas = 8
error_esperado = 0.5 * (10 ** (2 - cifras_significativas))  # 0.00005%

termino_actual = x
seno_aprox = x
anterior_aprox = 0.0
error_aproximado = 100.0
n = 1
iteraciones = 1

def potencia(base, exponente):
    resultado = 1.0
    for _ in range(exponente):
        resultado *= base
    return resultado

def factorial(numero):
    resultado = 1
    for i in range(1, numero + 1):
        resultado *= i
    return resultado

while error_aproximado > error_esperado:
    exponente = 2 * n + 1
    signo = (-1) ** n
    termino_actual = signo * (potencia(x, exponente) / factorial(exponente))

    seno_aprox += termino_actual
    iteraciones += 1

    if seno_aprox != 0:
        error_aproximado = abs((seno_aprox - anterior_aprox) / seno_aprox) * 100
    else:
        error_aproximado = 0.0

    anterior_aprox = seno_aprox
    n += 1

# Mostrar resultados
print("\nResultado estimado de sen(x):", seno_aprox)
print("Error aproximado relativo porcentual: {:.10f}%".format(error_aproximado))
print("NÃºmero de iteraciones realizadas:", iteraciones)