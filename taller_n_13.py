# -*- coding: utf-8 -*-
"""Taller_n_13.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KqrFxlop1HpOwMFCIZVF7O8TEoLNB9RX
"""

import copy

def imprimirSistema(a, b, etiqueta):
    n = len(b)
    print(etiqueta)
    for i in range(n):
        for j in range(n):
            print(a[i][j], end = " ")
        print("|", b[i])
    print()

def gaussJordan(ao, bo):
    a = copy.deepcopy(ao)
    b = copy.copy(bo)

    n = len(b)
    imprimirSistema(a, b, "Matriz inicial")
    for i in range(n):
        pivote = a[i][i]

        if pivote == 0:
            for j in range(i + 1, n):
                if a[j][i] != 0:
                    # Intercambiar filas
                    a[i], a[j] = a[j], a[i]
                    b[i], b[j] = b[j], b[i]
                    pivote = a[i][i]  # Actualizar el pivote
                    print(f"Intercambiando filas {i+1} y {j+1} porque el pivote es cero")
                    break

        if pivote != 0:
          for j in range(n):
              a[i][j] /= pivote
          b[i] /= pivote
          imprimirSistema(a, b, "División")

        #Reducción
        for k in range(n):
            if i != k:
                #Se reduce
                valorAux = -a[k][i]
                for j in range(n):
                    a[k][j] += a[i][j] * valorAux
                b[k] += b[i] * valorAux
        imprimirSistema(a, b, "Reducción")

    return b

a = [[2, 2, 3], [4, 0, -1], [3, 2, -2]]
b = [7, 18, 16]
x = gaussJordan(a, b)

print("Respuesta:")
for i in range(len(x)):
    print("x" + str(i+1), "=", x[i])

#Pruebas
print("\nPruebas:")
for i in range(len(b)):
    valorAux = b[i]
    for j in range(len(b)):
        valorAux -= a[i][j] * x[j]
    print("Test", i + 1, "=", valorAux)