# -*- coding: utf-8 -*-
"""Taller_n_16.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qHyehdiWPzA5h4FDyFaY86cvYTBa6mX5
"""

import numpy as np
import matplotlib.pyplot as plt

x = np.array([1, 2, 3, 4, 5, 6, 7, 8], dtype=float)
y = np.array([12, 8, 10, 4, 6, 3, 2, -1], dtype=float)

x_prom = np.mean(x)
y_prom = np.mean(y)

n = len(x)
a1 = (n * np.sum(x * y) - np.sum(x) * np.sum(y)) / (n * np.sum(x**2) - (np.sum(x))**2)
a0 = y_prom - a1 * x_prom

print("Coeficientes del modelo:")
print(f"a0 (intersección) = {a0:.4f}")
print(f"a1 (pendiente) = {a1:.4f}")

print(f"\nEcuación ajustada: y = {a0:.4f} + {a1:.4f}x")

y_modelo = a0 + a1 * x
residuos = y - y_modelo

plt.scatter(x, y, color='blue', label='Datos originales')
plt.plot(x, y_modelo, color='red', label='Recta ajustada')
plt.xlabel('x')
plt.ylabel('y')
plt.title('Regresión Lineal por Mínimos Cuadrados')
plt.legend()
plt.grid(True)
plt.show()

MSE = np.mean(residuos**2)
print(f"\nError cuadrático medio (MSE): {MSE:.4f}")