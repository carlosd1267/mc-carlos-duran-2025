# -*- coding: utf-8 -*-
"""TALLER_N_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1x_wpRicZwCzoeS2aJuodPWJiMA9IeaHU
"""

import random
def union(a, b):
    c = set()
    for elemento in a:
        c.add(elemento)
    for elemento in b:
        c.add(elemento)
    return c

def interseccion(a, b):
    c = set()
    for elemento in a:
        if elemento in b:
            c.add(elemento)
    return c

def diferencia(a, b):
    c = set()
    for elemento in a:
        if elemento not in b:
            c.add(elemento)
    return c

def diferencia_simetrica(a, b):
    c = set()
    for elemento in a:
        if elemento not in b:
            c.add(elemento)
    for elemento in b:
        if elemento not in a:
            c.add(elemento)
    return c
cardinalidad_A=int(input("Por favor ingrese la cardinalidad del cojunto A:"))
cardinalidad_B=int(input("Por favor ingrese la cardinalidad del conjunto B:"))
conjunto_A = set()
while len(conjunto_A) < cardinalidad_A:
    conjunto_A.add(random.randint(0, 30))
conjunto_B = set()
while len(conjunto_B) < cardinalidad_B:
    conjunto_B.add(random.randint(0, 30))
print(f"\nConjunto A ( elementos): {conjunto_A}")
print(f"Conjunto B (elementos): {conjunto_B}")

print(f"\nA ∪ B (Unión): {union(conjunto_A, conjunto_B)}")
print(f"A ∩ B (Intersección): {interseccion(conjunto_A, conjunto_B)}")
print(f"A − B (Diferencia): {diferencia(conjunto_A, conjunto_B)}")
print(f"B − A (Diferencia): {diferencia(conjunto_B, conjunto_A)}")
print(f"A ⨁ B (Diferencia simétrica): {diferencia_simetrica(conjunto_A, conjunto_B)}")